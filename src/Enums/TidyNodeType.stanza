; This file was auto-generated by lbstanza-wrapper
; Version 0.1.1
; Manual editing would be unwise
defpackage tidy/Enums/TidyNodeType :
  import core

public deftype TidyNodeType <: Equalable
public deftype TidyNode_Root_t <: TidyNodeType
public deftype TidyNode_DocType_t <: TidyNodeType
public deftype TidyNode_Comment_t <: TidyNodeType
public deftype TidyNode_ProcIns_t <: TidyNodeType
public deftype TidyNode_Text_t <: TidyNodeType
public deftype TidyNode_Start_t <: TidyNodeType
public deftype TidyNode_End_t <: TidyNodeType
public deftype TidyNode_StartEnd_t <: TidyNodeType
public deftype TidyNode_CDATA_t <: TidyNodeType
public deftype TidyNode_Section_t <: TidyNodeType
public deftype TidyNode_Asp_t <: TidyNodeType
public deftype TidyNode_Jste_t <: TidyNodeType
public deftype TidyNode_Php_t <: TidyNodeType
public deftype TidyNode_XmlDecl_t <: TidyNodeType

public val TidyNode_Root = new TidyNode_Root_t
public val TidyNode_DocType = new TidyNode_DocType_t
public val TidyNode_Comment = new TidyNode_Comment_t
public val TidyNode_ProcIns = new TidyNode_ProcIns_t
public val TidyNode_Text = new TidyNode_Text_t
public val TidyNode_Start = new TidyNode_Start_t
public val TidyNode_End = new TidyNode_End_t
public val TidyNode_StartEnd = new TidyNode_StartEnd_t
public val TidyNode_CDATA = new TidyNode_CDATA_t
public val TidyNode_Section = new TidyNode_Section_t
public val TidyNode_Asp = new TidyNode_Asp_t
public val TidyNode_Jste = new TidyNode_Jste_t
public val TidyNode_Php = new TidyNode_Php_t
public val TidyNode_XmlDecl = new TidyNode_XmlDecl_t

public defn to-int (v:TidyNodeType) -> Int:
  match(v) :
    (x:TidyNode_Root_t) : 0
    (x:TidyNode_DocType_t) : 1
    (x:TidyNode_Comment_t) : 2
    (x:TidyNode_ProcIns_t) : 3
    (x:TidyNode_Text_t) : 4
    (x:TidyNode_Start_t) : 5
    (x:TidyNode_End_t) : 6
    (x:TidyNode_StartEnd_t) : 7
    (x:TidyNode_CDATA_t) : 8
    (x:TidyNode_Section_t) : 9
    (x:TidyNode_Asp_t) : 10
    (x:TidyNode_Jste_t) : 11
    (x:TidyNode_Php_t) : 12
    (x:TidyNode_XmlDecl_t) : 13

public defn TidyNodeType (v:Int) -> TidyNodeType :
  switch {v == _}:
    0 : TidyNode_Root
    1 : TidyNode_DocType
    2 : TidyNode_Comment
    3 : TidyNode_ProcIns
    4 : TidyNode_Text
    5 : TidyNode_Start
    6 : TidyNode_End
    7 : TidyNode_StartEnd
    8 : TidyNode_CDATA
    9 : TidyNode_Section
    10 : TidyNode_Asp
    11 : TidyNode_Jste
    12 : TidyNode_Php
    13 : TidyNode_XmlDecl
    else: throw(Exception("TidyNodeType: Invalid Enum Value: %_" % [v]))

public lostanza defn TidyNodeType (v:int) -> ref<TidyNodeType> :
  return TidyNodeType(new Int{v})

public defmethod print (o:OutputStream, v:TidyNodeType) :
  match(v) :
    (x:TidyNode_Root_t) : print(o, "TidyNode_Root")
    (x:TidyNode_DocType_t) : print(o, "TidyNode_DocType")
    (x:TidyNode_Comment_t) : print(o, "TidyNode_Comment")
    (x:TidyNode_ProcIns_t) : print(o, "TidyNode_ProcIns")
    (x:TidyNode_Text_t) : print(o, "TidyNode_Text")
    (x:TidyNode_Start_t) : print(o, "TidyNode_Start")
    (x:TidyNode_End_t) : print(o, "TidyNode_End")
    (x:TidyNode_StartEnd_t) : print(o, "TidyNode_StartEnd")
    (x:TidyNode_CDATA_t) : print(o, "TidyNode_CDATA")
    (x:TidyNode_Section_t) : print(o, "TidyNode_Section")
    (x:TidyNode_Asp_t) : print(o, "TidyNode_Asp")
    (x:TidyNode_Jste_t) : print(o, "TidyNode_Jste")
    (x:TidyNode_Php_t) : print(o, "TidyNode_Php")
    (x:TidyNode_XmlDecl_t) : print(o, "TidyNode_XmlDecl")

public defmethod equal? (a:TidyNodeType, b:TidyNodeType) -> True|False :
  to-int(a) == to-int(b)

