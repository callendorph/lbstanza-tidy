defpackage tidy/Enums/TidyAttrSortStrategy :
  import core

public deftype TidyAttrSortStrategy
public deftype TidySortAttrNone <: TidyAttrSortStrategy
public deftype TidySortAttrAlpha <: TidyAttrSortStrategy

public defn to-int (v:TidyAttrSortStrategy) -> Int:
  match(v) :
    (x:TidySortAttrNone) : 0
    (x:TidySortAttrAlpha) : 1

public defn TidyAttrSortStrategy (v:Int) -> TidyAttrSortStrategy :
  switch {v == _}:
    0 : new TidySortAttrNone
    1 : new TidySortAttrAlpha
    else: throw(Exception("Invalid Exception Value"))

public lostanza defn TidyAttrSortStrategy (v:int) -> ref<TidyAttrSortStrategy> :
  return TidyAttrSortStrategy(new Int{v})

defmethod print (o:OutputStream, v:TidyAttrSortStrategy) :
  match(v) :
    (x:TidySortAttrNone) : print(o, "TidySortAttrNone")
    (x:TidySortAttrAlpha) : print(o, "TidySortAttrAlpha")

