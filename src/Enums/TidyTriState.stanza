; This file was auto-generated by lbstanza-wrapper
; Version 0.1.1
; Manual editing would be unwise
defpackage tidy/Enums/TidyTriState :
  import core

public deftype TidyTriState <: Equalable
public deftype TidyNoState_t <: TidyTriState
public deftype TidyYesState_t <: TidyTriState
public deftype TidyAutoState_t <: TidyTriState

public val TidyNoState = new TidyNoState_t
public val TidyYesState = new TidyYesState_t
public val TidyAutoState = new TidyAutoState_t

public defn to-int (v:TidyTriState) -> Int:
  match(v) :
    (x:TidyNoState_t) : 0
    (x:TidyYesState_t) : 1
    (x:TidyAutoState_t) : 2

public defn TidyTriState (v:Int) -> TidyTriState :
  switch {v == _}:
    0 : TidyNoState
    1 : TidyYesState
    2 : TidyAutoState
    else: throw(Exception("TidyTriState: Invalid Enum Value: %_" % [v]))

public lostanza defn TidyTriState (v:int) -> ref<TidyTriState> :
  return TidyTriState(new Int{v})

public defmethod print (o:OutputStream, v:TidyTriState) :
  match(v) :
    (x:TidyNoState_t) : print(o, "TidyNoState")
    (x:TidyYesState_t) : print(o, "TidyYesState")
    (x:TidyAutoState_t) : print(o, "TidyAutoState")

public defmethod equal? (a:TidyTriState, b:TidyTriState) -> True|False :
  to-int(a) == to-int(b)

