defpackage tidy/Enums/TidyFormatParameterType :
  import core

public deftype TidyFormatParameterType
public deftype tidyFormatType_INT <: TidyFormatParameterType
public deftype tidyFormatType_UINT <: TidyFormatParameterType
public deftype tidyFormatType_STRING <: TidyFormatParameterType
public deftype tidyFormatType_DOUBLE <: TidyFormatParameterType
public deftype tidyFormatType_UNKNOWN <: TidyFormatParameterType

public defn to-int (v:TidyFormatParameterType) -> Int:
  match(v) :
    (x:tidyFormatType_INT) : 0
    (x:tidyFormatType_UINT) : 1
    (x:tidyFormatType_STRING) : 2
    (x:tidyFormatType_DOUBLE) : 3
    (x:tidyFormatType_UNKNOWN) : 20

public defn TidyFormatParameterType (v:Int) -> TidyFormatParameterType :
  switch {v == _}:
    0 : new tidyFormatType_INT
    1 : new tidyFormatType_UINT
    2 : new tidyFormatType_STRING
    3 : new tidyFormatType_DOUBLE
    20 : new tidyFormatType_UNKNOWN
    else: throw(Exception("Invalid Exception Value"))

public lostanza defn TidyFormatParameterType (v:int) -> ref<TidyFormatParameterType> :
  return TidyFormatParameterType(new Int{v})

defmethod print (o:OutputStream, v:TidyFormatParameterType) :
  match(v) :
    (x:tidyFormatType_INT) : print(o, "tidyFormatType_INT")
    (x:tidyFormatType_UINT) : print(o, "tidyFormatType_UINT")
    (x:tidyFormatType_STRING) : print(o, "tidyFormatType_STRING")
    (x:tidyFormatType_DOUBLE) : print(o, "tidyFormatType_DOUBLE")
    (x:tidyFormatType_UNKNOWN) : print(o, "tidyFormatType_UNKNOWN")

