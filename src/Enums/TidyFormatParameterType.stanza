; This file was auto-generated by lbstanza-wrapper
; Version 0.1.2
; Manual editing would be unwise
defpackage tidy/Enums/TidyFormatParameterType :
  import core

public deftype TidyFormatParameterType <: Equalable
public deftype tidyFormatType_INT <: TidyFormatParameterType
public deftype tidyFormatType_UINT <: TidyFormatParameterType
public deftype tidyFormatType_STRING <: TidyFormatParameterType
public deftype tidyFormatType_DOUBLE <: TidyFormatParameterType
public deftype tidyFormatType_UNKNOWN <: TidyFormatParameterType

public val tidyFormatType_INT = new tidyFormatType_INT
public val tidyFormatType_UINT = new tidyFormatType_UINT
public val tidyFormatType_STRING = new tidyFormatType_STRING
public val tidyFormatType_DOUBLE = new tidyFormatType_DOUBLE
public val tidyFormatType_UNKNOWN = new tidyFormatType_UNKNOWN

public defn to-int (v:TidyFormatParameterType) -> Int:
  match(v) :
    (x:tidyFormatType_INT) : 0
    (x:tidyFormatType_UINT) : 1
    (x:tidyFormatType_STRING) : 2
    (x:tidyFormatType_DOUBLE) : 3
    (x:tidyFormatType_UNKNOWN) : 20

public defn TidyFormatParameterType (v:Int) -> TidyFormatParameterType :
  switch {v == _}:
    0 : tidyFormatType_INT
    1 : tidyFormatType_UINT
    2 : tidyFormatType_STRING
    3 : tidyFormatType_DOUBLE
    20 : tidyFormatType_UNKNOWN
    else: throw(Exception("TidyFormatParameterType: Invalid Enum Value: %_" % [v]))

public lostanza defn TidyFormatParameterType (v:int) -> ref<TidyFormatParameterType> :
  return TidyFormatParameterType(new Int{v})

public defmethod print (o:OutputStream, v:TidyFormatParameterType) :
  match(v) :
    (x:tidyFormatType_INT) : print(o, "tidyFormatType_INT")
    (x:tidyFormatType_UINT) : print(o, "tidyFormatType_UINT")
    (x:tidyFormatType_STRING) : print(o, "tidyFormatType_STRING")
    (x:tidyFormatType_DOUBLE) : print(o, "tidyFormatType_DOUBLE")
    (x:tidyFormatType_UNKNOWN) : print(o, "tidyFormatType_UNKNOWN")

public defmethod equal? (a:TidyFormatParameterType, b:TidyFormatParameterType) -> True|False :
  to-int(a) == to-int(b)

