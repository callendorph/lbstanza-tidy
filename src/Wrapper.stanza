; This file was auto-generated by lbstanza-wrapper
; Version 0.1.1
; Manual editing would be unwise
defpackage tidy/Wrapper :
  import core
  import core/dynamic-library

#if-defined(COMPILE-STATIC):
  extern tidySetMallocCall : (ptr<( (int) -> ptr<?> )>) -> int
  extern tidySetReallocCall : (ptr<( (ptr<?>,int) -> ptr<?> )>) -> int
  extern tidySetFreeCall : (ptr<( (ptr<?>) -> int )>) -> int
  extern tidySetPanicCall : (ptr<( (ptr<byte>) -> int )>) -> int
  extern tidyCreate : () -> ptr<?>
  extern tidyCreateWithAllocator : (ptr<?>) -> ptr<?>
  extern tidyRelease : (ptr<?>) -> int  ;  void
  extern tidySetAppData : (ptr<?>,ptr<?>) -> int  ;  void
  extern tidyGetAppData : (ptr<?>) -> ptr<?>
  extern tidyReleaseDate : () -> ptr<byte>
  extern tidyLibraryVersion : () -> ptr<byte>
  extern tidyPlatform : () -> ptr<byte>
  extern tidyStatus : (ptr<?>) -> int
  extern tidyDetectedHtmlVersion : (ptr<?>) -> int
  extern tidyDetectedXhtml : (ptr<?>) -> int
  extern tidyDetectedGenericXml : (ptr<?>) -> int
  extern tidyErrorCount : (ptr<?>) -> int
  extern tidyWarningCount : (ptr<?>) -> int
  extern tidyAccessWarningCount : (ptr<?>) -> int
  extern tidyConfigErrorCount : (ptr<?>) -> int
  extern tidyErrorSummary : (ptr<?>) -> int  ;  void
  extern tidyGeneralInfo : (ptr<?>) -> int  ;  void
  extern tidyLoadConfig : (ptr<?>,ptr<byte>) -> int
  extern tidyLoadConfigEnc : (ptr<?>,ptr<byte>,ptr<byte>) -> int
  extern tidyFileExists : (ptr<?>,ptr<byte>) -> int
  extern tidySetCharEncoding : (ptr<?>,ptr<byte>) -> int
  extern tidySetInCharEncoding : (ptr<?>,ptr<byte>) -> int
  extern tidySetOutCharEncoding : (ptr<?>,ptr<byte>) -> int
  extern tidySetOptionCallback : (ptr<?>,ptr<( (ptr<byte>,ptr<byte>) -> int )>) -> int
  extern tidySetConfigCallback : (ptr<?>,ptr<( (ptr<?>,ptr<byte>,ptr<byte>) -> int )>) -> int
  extern tidySetConfigChangeCallback : (ptr<?>,ptr<( (ptr<?>,ptr<?>) -> int )>) -> int
  extern tidyOptGetId : (ptr<?>) -> int
  extern tidyOptGetIdForName : (ptr<byte>) -> int
  extern tidyGetOptionList : (ptr<?>) -> ptr<?>
  extern tidyGetNextOption : (ptr<?>,ptr<ptr<?>>) -> ptr<?>
  extern tidyGetOption : (ptr<?>,int) -> ptr<?>
  extern tidyGetOptionByName : (ptr<?>,ptr<byte>) -> ptr<?>
  extern tidyOptGetName : (ptr<?>) -> ptr<byte>
  extern tidyOptGetType : (ptr<?>) -> int
  extern tidyOptionIsList : (ptr<?>) -> int
  extern tidyOptIsReadOnly : (ptr<?>) -> int
  extern tidyOptGetCategory : (ptr<?>) -> int
  extern tidyOptGetDefault : (ptr<?>) -> ptr<byte>
  extern tidyOptGetDefaultInt : (ptr<?>) -> long
  extern tidyOptGetDefaultBool : (ptr<?>) -> int
  extern tidyOptGetPickList : (ptr<?>) -> ptr<?>
  extern tidyOptGetNextPick : (ptr<?>,ptr<ptr<?>>) -> ptr<byte>
  extern tidyOptGetValue : (ptr<?>,int) -> ptr<byte>
  extern tidyOptSetValue : (ptr<?>,int,ptr<byte>) -> int
  extern tidyOptParseValue : (ptr<?>,ptr<byte>,ptr<byte>) -> int
  extern tidyOptGetInt : (ptr<?>,int) -> long
  extern tidyOptSetInt : (ptr<?>,int,long) -> int
  extern tidyOptGetBool : (ptr<?>,int) -> int
  extern tidyOptSetBool : (ptr<?>,int,int) -> int
  extern tidyOptResetToDefault : (ptr<?>,int) -> int
  extern tidyOptResetAllToDefault : (ptr<?>) -> int
  extern tidyOptSnapshot : (ptr<?>) -> int
  extern tidyOptResetToSnapshot : (ptr<?>) -> int
  extern tidyOptDiffThanDefault : (ptr<?>) -> int
  extern tidyOptDiffThanSnapshot : (ptr<?>) -> int
  extern tidyOptCopyConfig : (ptr<?>,ptr<?>) -> int
  extern tidyOptGetEncName : (ptr<?>,int) -> ptr<byte>
  extern tidyOptGetCurrPick : (ptr<?>,int) -> ptr<byte>
  extern tidyOptGetDeclTagList : (ptr<?>) -> ptr<?>
  extern tidyOptGetNextDeclTag : (ptr<?>,int,ptr<ptr<?>>) -> ptr<byte>
  extern tidyOptGetPriorityAttrList : (ptr<?>) -> ptr<?>
  extern tidyOptGetNextPriorityAttr : (ptr<?>,ptr<ptr<?>>) -> ptr<byte>
  extern tidyOptGetMutedMessageList : (ptr<?>) -> ptr<?>
  extern tidyOptGetNextMutedMessage : (ptr<?>,ptr<ptr<?>>) -> ptr<byte>
  extern tidyOptGetDoc : (ptr<?>,ptr<?>) -> ptr<byte>
  extern tidyOptGetDocLinksList : (ptr<?>,ptr<?>) -> ptr<?>
  extern tidyOptGetNextDocLinks : (ptr<?>,ptr<ptr<?>>) -> ptr<?>
  extern tidyInitSource : (ptr<?>,ptr<?>,ptr<( (ptr<?>) -> int )>,ptr<( (ptr<?>,byte) -> int )>,ptr<( (ptr<?>) -> int )>) -> int
  extern tidyGetByte : (ptr<?>) -> int
  extern tidyUngetByte : (ptr<?>,int) -> int  ;  void
  extern tidyIsEOF : (ptr<?>) -> int
  extern tidyInitSink : (ptr<?>,ptr<?>,ptr<( (ptr<?>,byte) -> int )>) -> int
  extern tidyPutByte : (ptr<?>,int) -> int  ;  void
  extern tidySetEmacsFile : (ptr<?>,ptr<byte>) -> int  ;  void
  extern tidyGetEmacsFile : (ptr<?>) -> ptr<byte>
  extern tidySetErrorFile : (ptr<?>,ptr<byte>) -> ptr<int>
  extern tidySetErrorBuffer : (ptr<?>,ptr<?>) -> int
  extern tidySetErrorSink : (ptr<?>,ptr<?>) -> int
  extern tidySetReportFilter : (ptr<?>,ptr<( (ptr<?>,int,int,int,ptr<byte>) -> int )>) -> int
  extern tidySetReportCallback : (ptr<?>,ptr<( (ptr<?>,int,int,int,ptr<byte>,int) -> int )>) -> int
  extern tidySetMessageCallback : (ptr<?>,ptr<( (ptr<?>) -> int )>) -> int
  extern tidyGetMessageDoc : (ptr<?>) -> ptr<?>
  extern tidyGetMessageCode : (ptr<?>) -> int
  extern tidyGetMessageKey : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageLine : (ptr<?>) -> int
  extern tidyGetMessageColumn : (ptr<?>) -> int
  extern tidyGetMessageLevel : (ptr<?>) -> int
  extern tidyGetMessageIsMuted : (ptr<?>) -> int
  extern tidyGetMessageFormatDefault : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageFormat : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageDefault : (ptr<?>) -> ptr<byte>
  extern tidyGetMessage : (ptr<?>) -> ptr<byte>
  extern tidyGetMessagePosDefault : (ptr<?>) -> ptr<byte>
  extern tidyGetMessagePos : (ptr<?>) -> ptr<byte>
  extern tidyGetMessagePrefixDefault : (ptr<?>) -> ptr<byte>
  extern tidyGetMessagePrefix : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageOutputDefault : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageOutput : (ptr<?>) -> ptr<byte>
  extern tidyGetMessageArguments : (ptr<?>) -> ptr<?>
  extern tidyGetNextMessageArgument : (ptr<?>,ptr<ptr<?>>) -> ptr<?>
  extern tidyGetArgType : (ptr<?>,ptr<ptr<?>>) -> int
  extern tidyGetArgFormat : (ptr<?>,ptr<ptr<?>>) -> ptr<byte>
  extern tidyGetArgValueString : (ptr<?>,ptr<ptr<?>>) -> ptr<byte>
  extern tidyGetArgValueUInt : (ptr<?>,ptr<ptr<?>>) -> int
  extern tidyGetArgValueInt : (ptr<?>,ptr<ptr<?>>) -> int
  extern tidyGetArgValueDouble : (ptr<?>,ptr<ptr<?>>) -> double
  extern tidySetPrettyPrinterCallback : (ptr<?>,ptr<( (ptr<?>,int,int,int) -> int )>) -> int
  extern tidyParseFile : (ptr<?>,ptr<byte>) -> int
  extern tidyParseStdin : (ptr<?>) -> int
  extern tidyParseString : (ptr<?>,ptr<byte>) -> int
  extern tidyParseBuffer : (ptr<?>,ptr<?>) -> int
  extern tidyParseSource : (ptr<?>,ptr<?>) -> int
  extern tidyCleanAndRepair : (ptr<?>) -> int
  extern tidyRunDiagnostics : (ptr<?>) -> int
  extern tidyReportDoctype : (ptr<?>) -> int
  extern tidySaveFile : (ptr<?>,ptr<byte>) -> int
  extern tidySaveStdout : (ptr<?>) -> int
  extern tidySaveBuffer : (ptr<?>,ptr<?>) -> int
  extern tidySaveString : (ptr<?>,ptr<byte>,ptr<int>) -> int
  extern tidySaveSink : (ptr<?>,ptr<?>) -> int
  extern tidyOptSaveFile : (ptr<?>,ptr<byte>) -> int
  extern tidyOptSaveSink : (ptr<?>,ptr<?>) -> int
  extern tidyGetRoot : (ptr<?>) -> ptr<?>
  extern tidyGetHtml : (ptr<?>) -> ptr<?>
  extern tidyGetHead : (ptr<?>) -> ptr<?>
  extern tidyGetBody : (ptr<?>) -> ptr<?>
  extern tidyGetParent : (ptr<?>) -> ptr<?>
  extern tidyGetChild : (ptr<?>) -> ptr<?>
  extern tidyGetNext : (ptr<?>) -> ptr<?>
  extern tidyGetPrev : (ptr<?>) -> ptr<?>
  extern tidyDiscardElement : (ptr<?>,ptr<?>) -> ptr<?>
  extern tidyAttrFirst : (ptr<?>) -> ptr<?>
  extern tidyAttrNext : (ptr<?>) -> ptr<?>
  extern tidyAttrName : (ptr<?>) -> ptr<byte>
  extern tidyAttrValue : (ptr<?>) -> ptr<byte>
  extern tidyAttrDiscard : (ptr<?>,ptr<?>,ptr<?>) -> int  ;  void
  extern tidyAttrGetId : (ptr<?>) -> int
  extern tidyAttrIsEvent : (ptr<?>) -> int
  extern tidyAttrGetById : (ptr<?>,int) -> ptr<?>
  extern tidyNodeGetType : (ptr<?>) -> int
  extern tidyNodeGetName : (ptr<?>) -> ptr<byte>
  extern tidyNodeIsText : (ptr<?>) -> int
  extern tidyNodeIsProp : (ptr<?>,ptr<?>) -> int
  extern tidyNodeIsHeader : (ptr<?>) -> int
  extern tidyNodeHasText : (ptr<?>,ptr<?>) -> int
  extern tidyNodeGetText : (ptr<?>,ptr<?>,ptr<?>) -> int
  extern tidyNodeGetValue : (ptr<?>,ptr<?>,ptr<?>) -> int
  extern tidyNodeGetId : (ptr<?>) -> int
  extern tidyNodeLine : (ptr<?>) -> int
  extern tidyNodeColumn : (ptr<?>) -> int
  extern tidyErrorCodeAsKey : (int) -> ptr<byte>
  extern tidyErrorCodeFromKey : (ptr<byte>) -> int
  extern getErrorCodeList : () -> ptr<?>
  extern getNextErrorCode : (ptr<ptr<?>>) -> int
  extern tidySetLanguage : (ptr<byte>) -> int
  extern tidyGetLanguage : () -> ptr<byte>
  extern getWindowsLanguageList : () -> ptr<?>
  extern getNextWindowsLanguage : (ptr<ptr<?>>) -> ptr<ptr<?>>
  extern TidyLangWindowsName : (ptr<ptr<?>>) -> ptr<byte>
  extern TidyLangPosixName : (ptr<ptr<?>>) -> ptr<byte>
  extern tidyLocalizedStringN : (int,int) -> ptr<byte>
  extern tidyLocalizedString : (int) -> ptr<byte>
  extern tidyDefaultStringN : (int,int) -> ptr<byte>
  extern tidyDefaultString : (int) -> ptr<byte>
  extern getStringKeyList : () -> ptr<?>
  extern getNextStringKey : (ptr<ptr<?>>) -> int
  extern getInstalledLanguageList : () -> ptr<?>
  extern getNextInstalledLanguage : (ptr<ptr<?>>) -> ptr<byte>
  extern tidyBufInit : (ptr<?>) -> int  ;  void
  extern tidyBufInitWithAllocator : (ptr<?>,ptr<?>) -> int  ;  void
  extern tidyBufAlloc : (ptr<?>,int) -> int  ;  void
  extern tidyBufAllocWithAllocator : (ptr<?>,ptr<?>,int) -> int  ;  void
  extern tidyBufCheckAlloc : (ptr<?>,int,int) -> int  ;  void
  extern tidyBufFree : (ptr<?>) -> int  ;  void
  extern tidyBufClear : (ptr<?>) -> int  ;  void
  extern tidyBufAttach : (ptr<?>,ptr<byte>,int) -> int  ;  void
  extern tidyBufDetach : (ptr<?>) -> int  ;  void
  extern tidyBufAppend : (ptr<?>,ptr<?>,int) -> int  ;  void
  extern tidyBufPutByte : (ptr<?>,byte) -> int  ;  void
  extern tidyBufPopByte : (ptr<?>) -> int
  extern tidyBufGetByte : (ptr<?>) -> int
  extern tidyBufEndOfInput : (ptr<?>) -> int
  extern tidyBufUngetByte : (ptr<?>,byte) -> int  ;  void
  extern tidyInitInputBuffer : (ptr<?>,ptr<?>) -> int  ;  void
  extern tidyInitOutputBuffer : (ptr<?>,ptr<?>) -> int  ;  void
  public lostanza defn w_tidySetMallocCall (fmalloc:ptr<( (int) -> ptr<?> )>) -> int :
    val ret = call-c tidySetMallocCall(fmalloc)
    return ret
  public lostanza defn w_tidySetReallocCall (frealloc:ptr<( (ptr<?>,int) -> ptr<?> )>) -> int :
    val ret = call-c tidySetReallocCall(frealloc)
    return ret
  public lostanza defn w_tidySetFreeCall (ffree:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c tidySetFreeCall(ffree)
    return ret
  public lostanza defn w_tidySetPanicCall (fpanic:ptr<( (ptr<byte>) -> int )>) -> int :
    val ret = call-c tidySetPanicCall(fpanic)
    return ret
  public lostanza defn w_tidyCreate () -> ptr<?> :
    val ret = call-c tidyCreate()
    return ret
  public lostanza defn w_tidyCreateWithAllocator (allocator:ptr<?>) -> ptr<?> :
    val ret = call-c tidyCreateWithAllocator(allocator)
    return ret
  public lostanza defn w_tidyRelease (tdoc:ptr<?>) -> ref<False> :
    call-c tidyRelease(tdoc)
    return false
  public lostanza defn w_tidySetAppData (tdoc:ptr<?>, appData:ptr<?>) -> ref<False> :
    call-c tidySetAppData(tdoc, appData)
    return false
  public lostanza defn w_tidyGetAppData (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetAppData(tdoc)
    return ret
  public lostanza defn w_tidyReleaseDate () -> ptr<byte> :
    val ret = call-c tidyReleaseDate()
    return ret
  public lostanza defn w_tidyLibraryVersion () -> ptr<byte> :
    val ret = call-c tidyLibraryVersion()
    return ret
  public lostanza defn w_tidyPlatform () -> ptr<byte> :
    val ret = call-c tidyPlatform()
    return ret
  public lostanza defn w_tidyStatus (tdoc:ptr<?>) -> int :
    val ret = call-c tidyStatus(tdoc)
    return ret
  public lostanza defn w_tidyDetectedHtmlVersion (tdoc:ptr<?>) -> int :
    val ret = call-c tidyDetectedHtmlVersion(tdoc)
    return ret
  public lostanza defn w_tidyDetectedXhtml (tdoc:ptr<?>) -> int :
    val ret = call-c tidyDetectedXhtml(tdoc)
    return ret
  public lostanza defn w_tidyDetectedGenericXml (tdoc:ptr<?>) -> int :
    val ret = call-c tidyDetectedGenericXml(tdoc)
    return ret
  public lostanza defn w_tidyErrorCount (tdoc:ptr<?>) -> int :
    val ret = call-c tidyErrorCount(tdoc)
    return ret
  public lostanza defn w_tidyWarningCount (tdoc:ptr<?>) -> int :
    val ret = call-c tidyWarningCount(tdoc)
    return ret
  public lostanza defn w_tidyAccessWarningCount (tdoc:ptr<?>) -> int :
    val ret = call-c tidyAccessWarningCount(tdoc)
    return ret
  public lostanza defn w_tidyConfigErrorCount (tdoc:ptr<?>) -> int :
    val ret = call-c tidyConfigErrorCount(tdoc)
    return ret
  public lostanza defn w_tidyErrorSummary (tdoc:ptr<?>) -> ref<False> :
    call-c tidyErrorSummary(tdoc)
    return false
  public lostanza defn w_tidyGeneralInfo (tdoc:ptr<?>) -> ref<False> :
    call-c tidyGeneralInfo(tdoc)
    return false
  public lostanza defn w_tidyLoadConfig (tdoc:ptr<?>, configFile:ptr<byte>) -> int :
    val ret = call-c tidyLoadConfig(tdoc, configFile)
    return ret
  public lostanza defn w_tidyLoadConfigEnc (tdoc:ptr<?>, configFile:ptr<byte>, charenc:ptr<byte>) -> int :
    val ret = call-c tidyLoadConfigEnc(tdoc, configFile, charenc)
    return ret
  public lostanza defn w_tidyFileExists (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c tidyFileExists(tdoc, filename)
    return ret
  public lostanza defn w_tidySetCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c tidySetCharEncoding(tdoc, encnam)
    return ret
  public lostanza defn w_tidySetInCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c tidySetInCharEncoding(tdoc, encnam)
    return ret
  public lostanza defn w_tidySetOutCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c tidySetOutCharEncoding(tdoc, encnam)
    return ret
  public lostanza defn w_tidySetOptionCallback (tdoc:ptr<?>, pOptCallback:ptr<( (ptr<byte>,ptr<byte>) -> int )>) -> int :
    val ret = call-c tidySetOptionCallback(tdoc, pOptCallback)
    return ret
  public lostanza defn w_tidySetConfigCallback (tdoc:ptr<?>, pConfigCallback:ptr<( (ptr<?>,ptr<byte>,ptr<byte>) -> int )>) -> int :
    val ret = call-c tidySetConfigCallback(tdoc, pConfigCallback)
    return ret
  public lostanza defn w_tidySetConfigChangeCallback (tdoc:ptr<?>, pCallback:ptr<( (ptr<?>,ptr<?>) -> int )>) -> int :
    val ret = call-c tidySetConfigChangeCallback(tdoc, pCallback)
    return ret
  public lostanza defn w_tidyOptGetId (opt:ptr<?>) -> int :
    val ret = call-c tidyOptGetId(opt)
    return ret
  public lostanza defn w_tidyOptGetIdForName (optnam:ptr<byte>) -> int :
    val ret = call-c tidyOptGetIdForName(optnam)
    return ret
  public lostanza defn w_tidyGetOptionList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetOptionList(tdoc)
    return ret
  public lostanza defn w_tidyGetNextOption (tdoc:ptr<?>, pos:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c tidyGetNextOption(tdoc, pos)
    return ret
  public lostanza defn w_tidyGetOption (tdoc:ptr<?>, optId:int) -> ptr<?> :
    val ret = call-c tidyGetOption(tdoc, optId)
    return ret
  public lostanza defn w_tidyGetOptionByName (tdoc:ptr<?>, optnam:ptr<byte>) -> ptr<?> :
    val ret = call-c tidyGetOptionByName(tdoc, optnam)
    return ret
  public lostanza defn w_tidyOptGetName (opt:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyOptGetName(opt)
    return ret
  public lostanza defn w_tidyOptGetType (opt:ptr<?>) -> int :
    val ret = call-c tidyOptGetType(opt)
    return ret
  public lostanza defn w_tidyOptionIsList (opt:ptr<?>) -> int :
    val ret = call-c tidyOptionIsList(opt)
    return ret
  public lostanza defn w_tidyOptIsReadOnly (opt:ptr<?>) -> int :
    val ret = call-c tidyOptIsReadOnly(opt)
    return ret
  public lostanza defn w_tidyOptGetCategory (opt:ptr<?>) -> int :
    val ret = call-c tidyOptGetCategory(opt)
    return ret
  public lostanza defn w_tidyOptGetDefault (opt:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyOptGetDefault(opt)
    return ret
  public lostanza defn w_tidyOptGetDefaultInt (opt:ptr<?>) -> long :
    val ret = call-c tidyOptGetDefaultInt(opt)
    return ret
  public lostanza defn w_tidyOptGetDefaultBool (opt:ptr<?>) -> int :
    val ret = call-c tidyOptGetDefaultBool(opt)
    return ret
  public lostanza defn w_tidyOptGetPickList (opt:ptr<?>) -> ptr<?> :
    val ret = call-c tidyOptGetPickList(opt)
    return ret
  public lostanza defn w_tidyOptGetNextPick (opt:ptr<?>, pos:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyOptGetNextPick(opt, pos)
    return ret
  public lostanza defn w_tidyOptGetValue (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c tidyOptGetValue(tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetValue (tdoc:ptr<?>, optId:int, val_v:ptr<byte>) -> int :
    val ret = call-c tidyOptSetValue(tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptParseValue (tdoc:ptr<?>, optnam:ptr<byte>, val_v:ptr<byte>) -> int :
    val ret = call-c tidyOptParseValue(tdoc, optnam, val_v)
    return ret
  public lostanza defn w_tidyOptGetInt (tdoc:ptr<?>, optId:int) -> long :
    val ret = call-c tidyOptGetInt(tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetInt (tdoc:ptr<?>, optId:int, val_v:long) -> int :
    val ret = call-c tidyOptSetInt(tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptGetBool (tdoc:ptr<?>, optId:int) -> int :
    val ret = call-c tidyOptGetBool(tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetBool (tdoc:ptr<?>, optId:int, val_v:int) -> int :
    val ret = call-c tidyOptSetBool(tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptResetToDefault (tdoc:ptr<?>, opt:int) -> int :
    val ret = call-c tidyOptResetToDefault(tdoc, opt)
    return ret
  public lostanza defn w_tidyOptResetAllToDefault (tdoc:ptr<?>) -> int :
    val ret = call-c tidyOptResetAllToDefault(tdoc)
    return ret
  public lostanza defn w_tidyOptSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c tidyOptSnapshot(tdoc)
    return ret
  public lostanza defn w_tidyOptResetToSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c tidyOptResetToSnapshot(tdoc)
    return ret
  public lostanza defn w_tidyOptDiffThanDefault (tdoc:ptr<?>) -> int :
    val ret = call-c tidyOptDiffThanDefault(tdoc)
    return ret
  public lostanza defn w_tidyOptDiffThanSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c tidyOptDiffThanSnapshot(tdoc)
    return ret
  public lostanza defn w_tidyOptCopyConfig (tdocTo:ptr<?>, tdocFrom:ptr<?>) -> int :
    val ret = call-c tidyOptCopyConfig(tdocTo, tdocFrom)
    return ret
  public lostanza defn w_tidyOptGetEncName (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c tidyOptGetEncName(tdoc, optId)
    return ret
  public lostanza defn w_tidyOptGetCurrPick (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c tidyOptGetCurrPick(tdoc, optId)
    return ret
  public lostanza defn w_tidyOptGetDeclTagList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyOptGetDeclTagList(tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextDeclTag (tdoc:ptr<?>, optId:int, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyOptGetNextDeclTag(tdoc, optId, iter)
    return ret
  public lostanza defn w_tidyOptGetPriorityAttrList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyOptGetPriorityAttrList(tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextPriorityAttr (tdoc:ptr<?>, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyOptGetNextPriorityAttr(tdoc, iter)
    return ret
  public lostanza defn w_tidyOptGetMutedMessageList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyOptGetMutedMessageList(tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextMutedMessage (tdoc:ptr<?>, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyOptGetNextMutedMessage(tdoc, iter)
    return ret
  public lostanza defn w_tidyOptGetDoc (tdoc:ptr<?>, opt:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyOptGetDoc(tdoc, opt)
    return ret
  public lostanza defn w_tidyOptGetDocLinksList (tdoc:ptr<?>, opt:ptr<?>) -> ptr<?> :
    val ret = call-c tidyOptGetDocLinksList(tdoc, opt)
    return ret
  public lostanza defn w_tidyOptGetNextDocLinks (tdoc:ptr<?>, pos:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c tidyOptGetNextDocLinks(tdoc, pos)
    return ret
  public lostanza defn w_tidyInitSource (source:ptr<?>, srcData:ptr<?>, gbFunc:ptr<( (ptr<?>) -> int )>, ugbFunc:ptr<( (ptr<?>,byte) -> int )>, endFunc:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c tidyInitSource(source, srcData, gbFunc, ugbFunc, endFunc)
    return ret
  public lostanza defn w_tidyGetByte (source:ptr<?>) -> int :
    val ret = call-c tidyGetByte(source)
    return ret
  public lostanza defn w_tidyUngetByte (source:ptr<?>, byteValue:int) -> ref<False> :
    call-c tidyUngetByte(source, byteValue)
    return false
  public lostanza defn w_tidyIsEOF (source:ptr<?>) -> int :
    val ret = call-c tidyIsEOF(source)
    return ret
  public lostanza defn w_tidyInitSink (sink:ptr<?>, snkData:ptr<?>, pbFunc:ptr<( (ptr<?>,byte) -> int )>) -> int :
    val ret = call-c tidyInitSink(sink, snkData, pbFunc)
    return ret
  public lostanza defn w_tidyPutByte (sink:ptr<?>, byteValue:int) -> ref<False> :
    call-c tidyPutByte(sink, byteValue)
    return false
  public lostanza defn w_tidySetEmacsFile (tdoc:ptr<?>, filePath:ptr<byte>) -> ref<False> :
    call-c tidySetEmacsFile(tdoc, filePath)
    return false
  public lostanza defn w_tidyGetEmacsFile (tdoc:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetEmacsFile(tdoc)
    return ret
  public lostanza defn w_tidySetErrorFile (tdoc:ptr<?>, errfilnam:ptr<byte>) -> ptr<int> :
    val ret = call-c tidySetErrorFile(tdoc, errfilnam)
    return ret
  public lostanza defn w_tidySetErrorBuffer (tdoc:ptr<?>, errbuf:ptr<?>) -> int :
    val ret = call-c tidySetErrorBuffer(tdoc, errbuf)
    return ret
  public lostanza defn w_tidySetErrorSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c tidySetErrorSink(tdoc, sink)
    return ret
  public lostanza defn w_tidySetReportFilter (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>,int,int,int,ptr<byte>) -> int )>) -> int :
    val ret = call-c tidySetReportFilter(tdoc, filtCallback)
    return ret
  public lostanza defn w_tidySetReportCallback (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>,int,int,int,ptr<byte>,int) -> int )>) -> int :
    val ret = call-c tidySetReportCallback(tdoc, filtCallback)
    return ret
  public lostanza defn w_tidySetMessageCallback (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c tidySetMessageCallback(tdoc, filtCallback)
    return ret
  public lostanza defn w_tidyGetMessageDoc (tmessage:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetMessageDoc(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageCode (tmessage:ptr<?>) -> int :
    val ret = call-c tidyGetMessageCode(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageKey (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageKey(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageLine (tmessage:ptr<?>) -> int :
    val ret = call-c tidyGetMessageLine(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageColumn (tmessage:ptr<?>) -> int :
    val ret = call-c tidyGetMessageColumn(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageLevel (tmessage:ptr<?>) -> int :
    val ret = call-c tidyGetMessageLevel(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageIsMuted (tmessage:ptr<?>) -> int :
    val ret = call-c tidyGetMessageIsMuted(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageFormatDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageFormatDefault(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageFormat (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageFormat(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageDefault(tmessage)
    return ret
  public lostanza defn w_tidyGetMessage (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessage(tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePosDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessagePosDefault(tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePos (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessagePos(tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePrefixDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessagePrefixDefault(tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePrefix (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessagePrefix(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageOutputDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageOutputDefault(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageOutput (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyGetMessageOutput(tmessage)
    return ret
  public lostanza defn w_tidyGetMessageArguments (tmessage:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetMessageArguments(tmessage)
    return ret
  public lostanza defn w_tidyGetNextMessageArgument (tmessage:ptr<?>, iter:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c tidyGetNextMessageArgument(tmessage, iter)
    return ret
  public lostanza defn w_tidyGetArgType (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c tidyGetArgType(tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgFormat (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyGetArgFormat(tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueString (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c tidyGetArgValueString(tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueUInt (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c tidyGetArgValueUInt(tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueInt (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c tidyGetArgValueInt(tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueDouble (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> double :
    val ret = call-c tidyGetArgValueDouble(tmessage, arg)
    return ret
  public lostanza defn w_tidySetPrettyPrinterCallback (tdoc:ptr<?>, callback:ptr<( (ptr<?>,int,int,int) -> int )>) -> int :
    val ret = call-c tidySetPrettyPrinterCallback(tdoc, callback)
    return ret
  public lostanza defn w_tidyParseFile (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c tidyParseFile(tdoc, filename)
    return ret
  public lostanza defn w_tidyParseStdin (tdoc:ptr<?>) -> int :
    val ret = call-c tidyParseStdin(tdoc)
    return ret
  public lostanza defn w_tidyParseString (tdoc:ptr<?>, content:ptr<byte>) -> int :
    val ret = call-c tidyParseString(tdoc, content)
    return ret
  public lostanza defn w_tidyParseBuffer (tdoc:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c tidyParseBuffer(tdoc, buf)
    return ret
  public lostanza defn w_tidyParseSource (tdoc:ptr<?>, source:ptr<?>) -> int :
    val ret = call-c tidyParseSource(tdoc, source)
    return ret
  public lostanza defn w_tidyCleanAndRepair (tdoc:ptr<?>) -> int :
    val ret = call-c tidyCleanAndRepair(tdoc)
    return ret
  public lostanza defn w_tidyRunDiagnostics (tdoc:ptr<?>) -> int :
    val ret = call-c tidyRunDiagnostics(tdoc)
    return ret
  public lostanza defn w_tidyReportDoctype (tdoc:ptr<?>) -> int :
    val ret = call-c tidyReportDoctype(tdoc)
    return ret
  public lostanza defn w_tidySaveFile (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c tidySaveFile(tdoc, filename)
    return ret
  public lostanza defn w_tidySaveStdout (tdoc:ptr<?>) -> int :
    val ret = call-c tidySaveStdout(tdoc)
    return ret
  public lostanza defn w_tidySaveBuffer (tdoc:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c tidySaveBuffer(tdoc, buf)
    return ret
  public lostanza defn w_tidySaveString (tdoc:ptr<?>, buffer:ptr<byte>, buflen:ptr<int>) -> int :
    val ret = call-c tidySaveString(tdoc, buffer, buflen)
    return ret
  public lostanza defn w_tidySaveSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c tidySaveSink(tdoc, sink)
    return ret
  public lostanza defn w_tidyOptSaveFile (tdoc:ptr<?>, cfgfil:ptr<byte>) -> int :
    val ret = call-c tidyOptSaveFile(tdoc, cfgfil)
    return ret
  public lostanza defn w_tidyOptSaveSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c tidyOptSaveSink(tdoc, sink)
    return ret
  public lostanza defn w_tidyGetRoot (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetRoot(tdoc)
    return ret
  public lostanza defn w_tidyGetHtml (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetHtml(tdoc)
    return ret
  public lostanza defn w_tidyGetHead (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetHead(tdoc)
    return ret
  public lostanza defn w_tidyGetBody (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetBody(tdoc)
    return ret
  public lostanza defn w_tidyGetParent (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetParent(tnod)
    return ret
  public lostanza defn w_tidyGetChild (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetChild(tnod)
    return ret
  public lostanza defn w_tidyGetNext (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetNext(tnod)
    return ret
  public lostanza defn w_tidyGetPrev (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyGetPrev(tnod)
    return ret
  public lostanza defn w_tidyDiscardElement (tdoc:ptr<?>, tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyDiscardElement(tdoc, tnod)
    return ret
  public lostanza defn w_tidyAttrFirst (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c tidyAttrFirst(tnod)
    return ret
  public lostanza defn w_tidyAttrNext (tattr:ptr<?>) -> ptr<?> :
    val ret = call-c tidyAttrNext(tattr)
    return ret
  public lostanza defn w_tidyAttrName (tattr:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyAttrName(tattr)
    return ret
  public lostanza defn w_tidyAttrValue (tattr:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyAttrValue(tattr)
    return ret
  public lostanza defn w_tidyAttrDiscard (itdoc:ptr<?>, tnod:ptr<?>, tattr:ptr<?>) -> ref<False> :
    call-c tidyAttrDiscard(itdoc, tnod, tattr)
    return false
  public lostanza defn w_tidyAttrGetId (tattr:ptr<?>) -> int :
    val ret = call-c tidyAttrGetId(tattr)
    return ret
  public lostanza defn w_tidyAttrIsEvent (tattr:ptr<?>) -> int :
    val ret = call-c tidyAttrIsEvent(tattr)
    return ret
  public lostanza defn w_tidyAttrGetById (tnod:ptr<?>, attId:int) -> ptr<?> :
    val ret = call-c tidyAttrGetById(tnod, attId)
    return ret
  public lostanza defn w_tidyNodeGetType (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeGetType(tnod)
    return ret
  public lostanza defn w_tidyNodeGetName (tnod:ptr<?>) -> ptr<byte> :
    val ret = call-c tidyNodeGetName(tnod)
    return ret
  public lostanza defn w_tidyNodeIsText (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeIsText(tnod)
    return ret
  public lostanza defn w_tidyNodeIsProp (tdoc:ptr<?>, tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeIsProp(tdoc, tnod)
    return ret
  public lostanza defn w_tidyNodeIsHeader (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeIsHeader(tnod)
    return ret
  public lostanza defn w_tidyNodeHasText (tdoc:ptr<?>, tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeHasText(tdoc, tnod)
    return ret
  public lostanza defn w_tidyNodeGetText (tdoc:ptr<?>, tnod:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c tidyNodeGetText(tdoc, tnod, buf)
    return ret
  public lostanza defn w_tidyNodeGetValue (tdoc:ptr<?>, tnod:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c tidyNodeGetValue(tdoc, tnod, buf)
    return ret
  public lostanza defn w_tidyNodeGetId (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeGetId(tnod)
    return ret
  public lostanza defn w_tidyNodeLine (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeLine(tnod)
    return ret
  public lostanza defn w_tidyNodeColumn (tnod:ptr<?>) -> int :
    val ret = call-c tidyNodeColumn(tnod)
    return ret
  public lostanza defn w_tidyErrorCodeAsKey (code:int) -> ptr<byte> :
    val ret = call-c tidyErrorCodeAsKey(code)
    return ret
  public lostanza defn w_tidyErrorCodeFromKey (code:ptr<byte>) -> int :
    val ret = call-c tidyErrorCodeFromKey(code)
    return ret
  public lostanza defn w_getErrorCodeList () -> ptr<?> :
    val ret = call-c getErrorCodeList()
    return ret
  public lostanza defn w_getNextErrorCode (iter:ptr<ptr<?>>) -> int :
    val ret = call-c getNextErrorCode(iter)
    return ret
  public lostanza defn w_tidySetLanguage (languageCode:ptr<byte>) -> int :
    val ret = call-c tidySetLanguage(languageCode)
    return ret
  public lostanza defn w_tidyGetLanguage () -> ptr<byte> :
    val ret = call-c tidyGetLanguage()
    return ret
  public lostanza defn w_getWindowsLanguageList () -> ptr<?> :
    val ret = call-c getWindowsLanguageList()
    return ret
  public lostanza defn w_getNextWindowsLanguage (iter:ptr<ptr<?>>) -> ptr<ptr<?>> :
    val ret = call-c getNextWindowsLanguage(iter)
    return ret
  public lostanza defn w_TidyLangWindowsName (item:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c TidyLangWindowsName(item)
    return ret
  public lostanza defn w_TidyLangPosixName (item:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c TidyLangPosixName(item)
    return ret
  public lostanza defn w_tidyLocalizedStringN (messageType:int, quantity:int) -> ptr<byte> :
    val ret = call-c tidyLocalizedStringN(messageType, quantity)
    return ret
  public lostanza defn w_tidyLocalizedString (messageType:int) -> ptr<byte> :
    val ret = call-c tidyLocalizedString(messageType)
    return ret
  public lostanza defn w_tidyDefaultStringN (messageType:int, quantity:int) -> ptr<byte> :
    val ret = call-c tidyDefaultStringN(messageType, quantity)
    return ret
  public lostanza defn w_tidyDefaultString (messageType:int) -> ptr<byte> :
    val ret = call-c tidyDefaultString(messageType)
    return ret
  public lostanza defn w_getStringKeyList () -> ptr<?> :
    val ret = call-c getStringKeyList()
    return ret
  public lostanza defn w_getNextStringKey (iter:ptr<ptr<?>>) -> int :
    val ret = call-c getNextStringKey(iter)
    return ret
  public lostanza defn w_getInstalledLanguageList () -> ptr<?> :
    val ret = call-c getInstalledLanguageList()
    return ret
  public lostanza defn w_getNextInstalledLanguage (iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c getNextInstalledLanguage(iter)
    return ret
  public lostanza defn w_tidyBufInit (buf:ptr<?>) -> ref<False> :
    call-c tidyBufInit(buf)
    return false
  public lostanza defn w_tidyBufInitWithAllocator (buf:ptr<?>, allocator:ptr<?>) -> ref<False> :
    call-c tidyBufInitWithAllocator(buf, allocator)
    return false
  public lostanza defn w_tidyBufAlloc (buf:ptr<?>, allocSize:int) -> ref<False> :
    call-c tidyBufAlloc(buf, allocSize)
    return false
  public lostanza defn w_tidyBufAllocWithAllocator (buf:ptr<?>, allocator:ptr<?>, allocSize:int) -> ref<False> :
    call-c tidyBufAllocWithAllocator(buf, allocator, allocSize)
    return false
  public lostanza defn w_tidyBufCheckAlloc (buf:ptr<?>, allocSize:int, chunkSize:int) -> ref<False> :
    call-c tidyBufCheckAlloc(buf, allocSize, chunkSize)
    return false
  public lostanza defn w_tidyBufFree (buf:ptr<?>) -> ref<False> :
    call-c tidyBufFree(buf)
    return false
  public lostanza defn w_tidyBufClear (buf:ptr<?>) -> ref<False> :
    call-c tidyBufClear(buf)
    return false
  public lostanza defn w_tidyBufAttach (buf:ptr<?>, bp:ptr<byte>, size:int) -> ref<False> :
    call-c tidyBufAttach(buf, bp, size)
    return false
  public lostanza defn w_tidyBufDetach (buf:ptr<?>) -> ref<False> :
    call-c tidyBufDetach(buf)
    return false
  public lostanza defn w_tidyBufAppend (buf:ptr<?>, vp:ptr<?>, size:int) -> ref<False> :
    call-c tidyBufAppend(buf, vp, size)
    return false
  public lostanza defn w_tidyBufPutByte (buf:ptr<?>, bv:byte) -> ref<False> :
    call-c tidyBufPutByte(buf, bv)
    return false
  public lostanza defn w_tidyBufPopByte (buf:ptr<?>) -> int :
    val ret = call-c tidyBufPopByte(buf)
    return ret
  public lostanza defn w_tidyBufGetByte (buf:ptr<?>) -> int :
    val ret = call-c tidyBufGetByte(buf)
    return ret
  public lostanza defn w_tidyBufEndOfInput (buf:ptr<?>) -> int :
    val ret = call-c tidyBufEndOfInput(buf)
    return ret
  public lostanza defn w_tidyBufUngetByte (buf:ptr<?>, bv:byte) -> ref<False> :
    call-c tidyBufUngetByte(buf, bv)
    return false
  public lostanza defn w_tidyInitInputBuffer (inp:ptr<?>, buf:ptr<?>) -> ref<False> :
    call-c tidyInitInputBuffer(inp, buf)
    return false
  public lostanza defn w_tidyInitOutputBuffer (outp:ptr<?>, buf:ptr<?>) -> ref<False> :
    call-c tidyInitOutputBuffer(outp, buf)
    return false
#else:
  val DEF_LIB_PATH = "./libtidy.dll"
  val ENV_LIB_PATH_NAME = "TIDY_SHARED_LIB"
  defn get-shared-lib () -> String :
    label<String> return:
      var sharedLib = get-env(ENV_LIB_PATH_NAME)
      match(sharedLib) :
        (fpath:String) :
          return(fpath)
        (x:False):
          return(DEF_LIB_PATH)
  
  val shlibPath = get-shared-lib()
  val shlib = dynamic-library-open(shlibPath)
  
  lostanza val p_tidySetMallocCall: ptr<((ptr<( (int) -> ptr<?> )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetMallocCall")).address
  
  lostanza val p_tidySetReallocCall: ptr<((ptr<( (ptr<?>,int) -> ptr<?> )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetReallocCall")).address
  
  lostanza val p_tidySetFreeCall: ptr<((ptr<( (ptr<?>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetFreeCall")).address
  
  lostanza val p_tidySetPanicCall: ptr<((ptr<( (ptr<byte>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetPanicCall")).address
  
  lostanza val p_tidyCreate: ptr<(() -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyCreate")).address
  
  lostanza val p_tidyCreateWithAllocator: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyCreateWithAllocator")).address
  
  lostanza val p_tidyRelease: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyRelease")).address
  
  lostanza val p_tidySetAppData: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetAppData")).address
  
  lostanza val p_tidyGetAppData: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetAppData")).address
  
  lostanza val p_tidyReleaseDate: ptr<(() -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyReleaseDate")).address
  
  lostanza val p_tidyLibraryVersion: ptr<(() -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyLibraryVersion")).address
  
  lostanza val p_tidyPlatform: ptr<(() -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyPlatform")).address
  
  lostanza val p_tidyStatus: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyStatus")).address
  
  lostanza val p_tidyDetectedHtmlVersion: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyDetectedHtmlVersion")).address
  
  lostanza val p_tidyDetectedXhtml: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyDetectedXhtml")).address
  
  lostanza val p_tidyDetectedGenericXml: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyDetectedGenericXml")).address
  
  lostanza val p_tidyErrorCount: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyErrorCount")).address
  
  lostanza val p_tidyWarningCount: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyWarningCount")).address
  
  lostanza val p_tidyAccessWarningCount: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyAccessWarningCount")).address
  
  lostanza val p_tidyConfigErrorCount: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyConfigErrorCount")).address
  
  lostanza val p_tidyErrorSummary: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyErrorSummary")).address
  
  lostanza val p_tidyGeneralInfo: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGeneralInfo")).address
  
  lostanza val p_tidyLoadConfig: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyLoadConfig")).address
  
  lostanza val p_tidyLoadConfigEnc: ptr<((ptr<?>,ptr<byte>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyLoadConfigEnc")).address
  
  lostanza val p_tidyFileExists: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyFileExists")).address
  
  lostanza val p_tidySetCharEncoding: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetCharEncoding")).address
  
  lostanza val p_tidySetInCharEncoding: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetInCharEncoding")).address
  
  lostanza val p_tidySetOutCharEncoding: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetOutCharEncoding")).address
  
  lostanza val p_tidySetOptionCallback: ptr<((ptr<?>,ptr<( (ptr<byte>,ptr<byte>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetOptionCallback")).address
  
  lostanza val p_tidySetConfigCallback: ptr<((ptr<?>,ptr<( (ptr<?>,ptr<byte>,ptr<byte>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetConfigCallback")).address
  
  lostanza val p_tidySetConfigChangeCallback: ptr<((ptr<?>,ptr<( (ptr<?>,ptr<?>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetConfigChangeCallback")).address
  
  lostanza val p_tidyOptGetId: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetId")).address
  
  lostanza val p_tidyOptGetIdForName: ptr<((ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetIdForName")).address
  
  lostanza val p_tidyGetOptionList: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetOptionList")).address
  
  lostanza val p_tidyGetNextOption: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetNextOption")).address
  
  lostanza val p_tidyGetOption: ptr<((ptr<?>,int) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetOption")).address
  
  lostanza val p_tidyGetOptionByName: ptr<((ptr<?>,ptr<byte>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetOptionByName")).address
  
  lostanza val p_tidyOptGetName: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetName")).address
  
  lostanza val p_tidyOptGetType: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetType")).address
  
  lostanza val p_tidyOptionIsList: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptionIsList")).address
  
  lostanza val p_tidyOptIsReadOnly: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptIsReadOnly")).address
  
  lostanza val p_tidyOptGetCategory: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetCategory")).address
  
  lostanza val p_tidyOptGetDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDefault")).address
  
  lostanza val p_tidyOptGetDefaultInt: ptr<((ptr<?>) -> long)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDefaultInt")).address
  
  lostanza val p_tidyOptGetDefaultBool: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDefaultBool")).address
  
  lostanza val p_tidyOptGetPickList: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetPickList")).address
  
  lostanza val p_tidyOptGetNextPick: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetNextPick")).address
  
  lostanza val p_tidyOptGetValue: ptr<((ptr<?>,int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetValue")).address
  
  lostanza val p_tidyOptSetValue: ptr<((ptr<?>,int,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSetValue")).address
  
  lostanza val p_tidyOptParseValue: ptr<((ptr<?>,ptr<byte>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptParseValue")).address
  
  lostanza val p_tidyOptGetInt: ptr<((ptr<?>,int) -> long)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetInt")).address
  
  lostanza val p_tidyOptSetInt: ptr<((ptr<?>,int,long) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSetInt")).address
  
  lostanza val p_tidyOptGetBool: ptr<((ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetBool")).address
  
  lostanza val p_tidyOptSetBool: ptr<((ptr<?>,int,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSetBool")).address
  
  lostanza val p_tidyOptResetToDefault: ptr<((ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptResetToDefault")).address
  
  lostanza val p_tidyOptResetAllToDefault: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptResetAllToDefault")).address
  
  lostanza val p_tidyOptSnapshot: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSnapshot")).address
  
  lostanza val p_tidyOptResetToSnapshot: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptResetToSnapshot")).address
  
  lostanza val p_tidyOptDiffThanDefault: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptDiffThanDefault")).address
  
  lostanza val p_tidyOptDiffThanSnapshot: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptDiffThanSnapshot")).address
  
  lostanza val p_tidyOptCopyConfig: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptCopyConfig")).address
  
  lostanza val p_tidyOptGetEncName: ptr<((ptr<?>,int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetEncName")).address
  
  lostanza val p_tidyOptGetCurrPick: ptr<((ptr<?>,int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetCurrPick")).address
  
  lostanza val p_tidyOptGetDeclTagList: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDeclTagList")).address
  
  lostanza val p_tidyOptGetNextDeclTag: ptr<((ptr<?>,int,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetNextDeclTag")).address
  
  lostanza val p_tidyOptGetPriorityAttrList: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetPriorityAttrList")).address
  
  lostanza val p_tidyOptGetNextPriorityAttr: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetNextPriorityAttr")).address
  
  lostanza val p_tidyOptGetMutedMessageList: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetMutedMessageList")).address
  
  lostanza val p_tidyOptGetNextMutedMessage: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetNextMutedMessage")).address
  
  lostanza val p_tidyOptGetDoc: ptr<((ptr<?>,ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDoc")).address
  
  lostanza val p_tidyOptGetDocLinksList: ptr<((ptr<?>,ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetDocLinksList")).address
  
  lostanza val p_tidyOptGetNextDocLinks: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyOptGetNextDocLinks")).address
  
  lostanza val p_tidyInitSource: ptr<((ptr<?>,ptr<?>,ptr<( (ptr<?>) -> int )>,ptr<( (ptr<?>,byte) -> int )>,ptr<( (ptr<?>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyInitSource")).address
  
  lostanza val p_tidyGetByte: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetByte")).address
  
  lostanza val p_tidyUngetByte: ptr<((ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyUngetByte")).address
  
  lostanza val p_tidyIsEOF: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyIsEOF")).address
  
  lostanza val p_tidyInitSink: ptr<((ptr<?>,ptr<?>,ptr<( (ptr<?>,byte) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyInitSink")).address
  
  lostanza val p_tidyPutByte: ptr<((ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyPutByte")).address
  
  lostanza val p_tidySetEmacsFile: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetEmacsFile")).address
  
  lostanza val p_tidyGetEmacsFile: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetEmacsFile")).address
  
  lostanza val p_tidySetErrorFile: ptr<((ptr<?>,ptr<byte>) -> ptr<int>)> = 
    dynamic-library-symbol(shlib, String("tidySetErrorFile")).address
  
  lostanza val p_tidySetErrorBuffer: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetErrorBuffer")).address
  
  lostanza val p_tidySetErrorSink: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetErrorSink")).address
  
  lostanza val p_tidySetReportFilter: ptr<((ptr<?>,ptr<( (ptr<?>,int,int,int,ptr<byte>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetReportFilter")).address
  
  lostanza val p_tidySetReportCallback: ptr<((ptr<?>,ptr<( (ptr<?>,int,int,int,ptr<byte>,int) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetReportCallback")).address
  
  lostanza val p_tidySetMessageCallback: ptr<((ptr<?>,ptr<( (ptr<?>) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetMessageCallback")).address
  
  lostanza val p_tidyGetMessageDoc: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageDoc")).address
  
  lostanza val p_tidyGetMessageCode: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageCode")).address
  
  lostanza val p_tidyGetMessageKey: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageKey")).address
  
  lostanza val p_tidyGetMessageLine: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageLine")).address
  
  lostanza val p_tidyGetMessageColumn: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageColumn")).address
  
  lostanza val p_tidyGetMessageLevel: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageLevel")).address
  
  lostanza val p_tidyGetMessageIsMuted: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageIsMuted")).address
  
  lostanza val p_tidyGetMessageFormatDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageFormatDefault")).address
  
  lostanza val p_tidyGetMessageFormat: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageFormat")).address
  
  lostanza val p_tidyGetMessageDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageDefault")).address
  
  lostanza val p_tidyGetMessage: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessage")).address
  
  lostanza val p_tidyGetMessagePosDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessagePosDefault")).address
  
  lostanza val p_tidyGetMessagePos: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessagePos")).address
  
  lostanza val p_tidyGetMessagePrefixDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessagePrefixDefault")).address
  
  lostanza val p_tidyGetMessagePrefix: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessagePrefix")).address
  
  lostanza val p_tidyGetMessageOutputDefault: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageOutputDefault")).address
  
  lostanza val p_tidyGetMessageOutput: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageOutput")).address
  
  lostanza val p_tidyGetMessageArguments: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetMessageArguments")).address
  
  lostanza val p_tidyGetNextMessageArgument: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetNextMessageArgument")).address
  
  lostanza val p_tidyGetArgType: ptr<((ptr<?>,ptr<ptr<?>>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgType")).address
  
  lostanza val p_tidyGetArgFormat: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgFormat")).address
  
  lostanza val p_tidyGetArgValueString: ptr<((ptr<?>,ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgValueString")).address
  
  lostanza val p_tidyGetArgValueUInt: ptr<((ptr<?>,ptr<ptr<?>>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgValueUInt")).address
  
  lostanza val p_tidyGetArgValueInt: ptr<((ptr<?>,ptr<ptr<?>>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgValueInt")).address
  
  lostanza val p_tidyGetArgValueDouble: ptr<((ptr<?>,ptr<ptr<?>>) -> double)> = 
    dynamic-library-symbol(shlib, String("tidyGetArgValueDouble")).address
  
  lostanza val p_tidySetPrettyPrinterCallback: ptr<((ptr<?>,ptr<( (ptr<?>,int,int,int) -> int )>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetPrettyPrinterCallback")).address
  
  lostanza val p_tidyParseFile: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyParseFile")).address
  
  lostanza val p_tidyParseStdin: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyParseStdin")).address
  
  lostanza val p_tidyParseString: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyParseString")).address
  
  lostanza val p_tidyParseBuffer: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyParseBuffer")).address
  
  lostanza val p_tidyParseSource: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyParseSource")).address
  
  lostanza val p_tidyCleanAndRepair: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyCleanAndRepair")).address
  
  lostanza val p_tidyRunDiagnostics: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyRunDiagnostics")).address
  
  lostanza val p_tidyReportDoctype: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyReportDoctype")).address
  
  lostanza val p_tidySaveFile: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySaveFile")).address
  
  lostanza val p_tidySaveStdout: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySaveStdout")).address
  
  lostanza val p_tidySaveBuffer: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySaveBuffer")).address
  
  lostanza val p_tidySaveString: ptr<((ptr<?>,ptr<byte>,ptr<int>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySaveString")).address
  
  lostanza val p_tidySaveSink: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySaveSink")).address
  
  lostanza val p_tidyOptSaveFile: ptr<((ptr<?>,ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSaveFile")).address
  
  lostanza val p_tidyOptSaveSink: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyOptSaveSink")).address
  
  lostanza val p_tidyGetRoot: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetRoot")).address
  
  lostanza val p_tidyGetHtml: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetHtml")).address
  
  lostanza val p_tidyGetHead: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetHead")).address
  
  lostanza val p_tidyGetBody: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetBody")).address
  
  lostanza val p_tidyGetParent: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetParent")).address
  
  lostanza val p_tidyGetChild: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetChild")).address
  
  lostanza val p_tidyGetNext: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetNext")).address
  
  lostanza val p_tidyGetPrev: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyGetPrev")).address
  
  lostanza val p_tidyDiscardElement: ptr<((ptr<?>,ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyDiscardElement")).address
  
  lostanza val p_tidyAttrFirst: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyAttrFirst")).address
  
  lostanza val p_tidyAttrNext: ptr<((ptr<?>) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyAttrNext")).address
  
  lostanza val p_tidyAttrName: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyAttrName")).address
  
  lostanza val p_tidyAttrValue: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyAttrValue")).address
  
  lostanza val p_tidyAttrDiscard: ptr<((ptr<?>,ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyAttrDiscard")).address
  
  lostanza val p_tidyAttrGetId: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyAttrGetId")).address
  
  lostanza val p_tidyAttrIsEvent: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyAttrIsEvent")).address
  
  lostanza val p_tidyAttrGetById: ptr<((ptr<?>,int) -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("tidyAttrGetById")).address
  
  lostanza val p_tidyNodeGetType: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeGetType")).address
  
  lostanza val p_tidyNodeGetName: ptr<((ptr<?>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyNodeGetName")).address
  
  lostanza val p_tidyNodeIsText: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeIsText")).address
  
  lostanza val p_tidyNodeIsProp: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeIsProp")).address
  
  lostanza val p_tidyNodeIsHeader: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeIsHeader")).address
  
  lostanza val p_tidyNodeHasText: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeHasText")).address
  
  lostanza val p_tidyNodeGetText: ptr<((ptr<?>,ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeGetText")).address
  
  lostanza val p_tidyNodeGetValue: ptr<((ptr<?>,ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeGetValue")).address
  
  lostanza val p_tidyNodeGetId: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeGetId")).address
  
  lostanza val p_tidyNodeLine: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeLine")).address
  
  lostanza val p_tidyNodeColumn: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyNodeColumn")).address
  
  lostanza val p_tidyErrorCodeAsKey: ptr<((int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyErrorCodeAsKey")).address
  
  lostanza val p_tidyErrorCodeFromKey: ptr<((ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyErrorCodeFromKey")).address
  
  lostanza val p_getErrorCodeList: ptr<(() -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("getErrorCodeList")).address
  
  lostanza val p_getNextErrorCode: ptr<((ptr<ptr<?>>) -> int)> = 
    dynamic-library-symbol(shlib, String("getNextErrorCode")).address
  
  lostanza val p_tidySetLanguage: ptr<((ptr<byte>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidySetLanguage")).address
  
  lostanza val p_tidyGetLanguage: ptr<(() -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyGetLanguage")).address
  
  lostanza val p_getWindowsLanguageList: ptr<(() -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("getWindowsLanguageList")).address
  
  lostanza val p_getNextWindowsLanguage: ptr<((ptr<ptr<?>>) -> ptr<ptr<?>>)> = 
    dynamic-library-symbol(shlib, String("getNextWindowsLanguage")).address
  
  lostanza val p_TidyLangWindowsName: ptr<((ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("TidyLangWindowsName")).address
  
  lostanza val p_TidyLangPosixName: ptr<((ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("TidyLangPosixName")).address
  
  lostanza val p_tidyLocalizedStringN: ptr<((int,int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyLocalizedStringN")).address
  
  lostanza val p_tidyLocalizedString: ptr<((int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyLocalizedString")).address
  
  lostanza val p_tidyDefaultStringN: ptr<((int,int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyDefaultStringN")).address
  
  lostanza val p_tidyDefaultString: ptr<((int) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("tidyDefaultString")).address
  
  lostanza val p_getStringKeyList: ptr<(() -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("getStringKeyList")).address
  
  lostanza val p_getNextStringKey: ptr<((ptr<ptr<?>>) -> int)> = 
    dynamic-library-symbol(shlib, String("getNextStringKey")).address
  
  lostanza val p_getInstalledLanguageList: ptr<(() -> ptr<?>)> = 
    dynamic-library-symbol(shlib, String("getInstalledLanguageList")).address
  
  lostanza val p_getNextInstalledLanguage: ptr<((ptr<ptr<?>>) -> ptr<byte>)> = 
    dynamic-library-symbol(shlib, String("getNextInstalledLanguage")).address
  
  lostanza val p_tidyBufInit: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufInit")).address
  
  lostanza val p_tidyBufInitWithAllocator: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufInitWithAllocator")).address
  
  lostanza val p_tidyBufAlloc: ptr<((ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufAlloc")).address
  
  lostanza val p_tidyBufAllocWithAllocator: ptr<((ptr<?>,ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufAllocWithAllocator")).address
  
  lostanza val p_tidyBufCheckAlloc: ptr<((ptr<?>,int,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufCheckAlloc")).address
  
  lostanza val p_tidyBufFree: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufFree")).address
  
  lostanza val p_tidyBufClear: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufClear")).address
  
  lostanza val p_tidyBufAttach: ptr<((ptr<?>,ptr<byte>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufAttach")).address
  
  lostanza val p_tidyBufDetach: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufDetach")).address
  
  lostanza val p_tidyBufAppend: ptr<((ptr<?>,ptr<?>,int) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufAppend")).address
  
  lostanza val p_tidyBufPutByte: ptr<((ptr<?>,byte) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufPutByte")).address
  
  lostanza val p_tidyBufPopByte: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufPopByte")).address
  
  lostanza val p_tidyBufGetByte: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufGetByte")).address
  
  lostanza val p_tidyBufEndOfInput: ptr<((ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufEndOfInput")).address
  
  lostanza val p_tidyBufUngetByte: ptr<((ptr<?>,byte) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyBufUngetByte")).address
  
  lostanza val p_tidyInitInputBuffer: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyInitInputBuffer")).address
  
  lostanza val p_tidyInitOutputBuffer: ptr<((ptr<?>,ptr<?>) -> int)> = 
    dynamic-library-symbol(shlib, String("tidyInitOutputBuffer")).address
  
  public lostanza defn w_tidySetMallocCall (fmalloc:ptr<( (int) -> ptr<?> )>) -> int :
    val ret = call-c [p_tidySetMallocCall](fmalloc)
    return ret
  public lostanza defn w_tidySetReallocCall (frealloc:ptr<( (ptr<?>,int) -> ptr<?> )>) -> int :
    val ret = call-c [p_tidySetReallocCall](frealloc)
    return ret
  public lostanza defn w_tidySetFreeCall (ffree:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c [p_tidySetFreeCall](ffree)
    return ret
  public lostanza defn w_tidySetPanicCall (fpanic:ptr<( (ptr<byte>) -> int )>) -> int :
    val ret = call-c [p_tidySetPanicCall](fpanic)
    return ret
  public lostanza defn w_tidyCreate () -> ptr<?> :
    val ret = call-c [p_tidyCreate]()
    return ret
  public lostanza defn w_tidyCreateWithAllocator (allocator:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyCreateWithAllocator](allocator)
    return ret
  public lostanza defn w_tidyRelease (tdoc:ptr<?>) -> ref<False> :
    call-c [p_tidyRelease](tdoc)
    return false
  public lostanza defn w_tidySetAppData (tdoc:ptr<?>, appData:ptr<?>) -> ref<False> :
    call-c [p_tidySetAppData](tdoc, appData)
    return false
  public lostanza defn w_tidyGetAppData (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetAppData](tdoc)
    return ret
  public lostanza defn w_tidyReleaseDate () -> ptr<byte> :
    val ret = call-c [p_tidyReleaseDate]()
    return ret
  public lostanza defn w_tidyLibraryVersion () -> ptr<byte> :
    val ret = call-c [p_tidyLibraryVersion]()
    return ret
  public lostanza defn w_tidyPlatform () -> ptr<byte> :
    val ret = call-c [p_tidyPlatform]()
    return ret
  public lostanza defn w_tidyStatus (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyStatus](tdoc)
    return ret
  public lostanza defn w_tidyDetectedHtmlVersion (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyDetectedHtmlVersion](tdoc)
    return ret
  public lostanza defn w_tidyDetectedXhtml (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyDetectedXhtml](tdoc)
    return ret
  public lostanza defn w_tidyDetectedGenericXml (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyDetectedGenericXml](tdoc)
    return ret
  public lostanza defn w_tidyErrorCount (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyErrorCount](tdoc)
    return ret
  public lostanza defn w_tidyWarningCount (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyWarningCount](tdoc)
    return ret
  public lostanza defn w_tidyAccessWarningCount (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyAccessWarningCount](tdoc)
    return ret
  public lostanza defn w_tidyConfigErrorCount (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyConfigErrorCount](tdoc)
    return ret
  public lostanza defn w_tidyErrorSummary (tdoc:ptr<?>) -> ref<False> :
    call-c [p_tidyErrorSummary](tdoc)
    return false
  public lostanza defn w_tidyGeneralInfo (tdoc:ptr<?>) -> ref<False> :
    call-c [p_tidyGeneralInfo](tdoc)
    return false
  public lostanza defn w_tidyLoadConfig (tdoc:ptr<?>, configFile:ptr<byte>) -> int :
    val ret = call-c [p_tidyLoadConfig](tdoc, configFile)
    return ret
  public lostanza defn w_tidyLoadConfigEnc (tdoc:ptr<?>, configFile:ptr<byte>, charenc:ptr<byte>) -> int :
    val ret = call-c [p_tidyLoadConfigEnc](tdoc, configFile, charenc)
    return ret
  public lostanza defn w_tidyFileExists (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c [p_tidyFileExists](tdoc, filename)
    return ret
  public lostanza defn w_tidySetCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c [p_tidySetCharEncoding](tdoc, encnam)
    return ret
  public lostanza defn w_tidySetInCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c [p_tidySetInCharEncoding](tdoc, encnam)
    return ret
  public lostanza defn w_tidySetOutCharEncoding (tdoc:ptr<?>, encnam:ptr<byte>) -> int :
    val ret = call-c [p_tidySetOutCharEncoding](tdoc, encnam)
    return ret
  public lostanza defn w_tidySetOptionCallback (tdoc:ptr<?>, pOptCallback:ptr<( (ptr<byte>,ptr<byte>) -> int )>) -> int :
    val ret = call-c [p_tidySetOptionCallback](tdoc, pOptCallback)
    return ret
  public lostanza defn w_tidySetConfigCallback (tdoc:ptr<?>, pConfigCallback:ptr<( (ptr<?>,ptr<byte>,ptr<byte>) -> int )>) -> int :
    val ret = call-c [p_tidySetConfigCallback](tdoc, pConfigCallback)
    return ret
  public lostanza defn w_tidySetConfigChangeCallback (tdoc:ptr<?>, pCallback:ptr<( (ptr<?>,ptr<?>) -> int )>) -> int :
    val ret = call-c [p_tidySetConfigChangeCallback](tdoc, pCallback)
    return ret
  public lostanza defn w_tidyOptGetId (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptGetId](opt)
    return ret
  public lostanza defn w_tidyOptGetIdForName (optnam:ptr<byte>) -> int :
    val ret = call-c [p_tidyOptGetIdForName](optnam)
    return ret
  public lostanza defn w_tidyGetOptionList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetOptionList](tdoc)
    return ret
  public lostanza defn w_tidyGetNextOption (tdoc:ptr<?>, pos:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c [p_tidyGetNextOption](tdoc, pos)
    return ret
  public lostanza defn w_tidyGetOption (tdoc:ptr<?>, optId:int) -> ptr<?> :
    val ret = call-c [p_tidyGetOption](tdoc, optId)
    return ret
  public lostanza defn w_tidyGetOptionByName (tdoc:ptr<?>, optnam:ptr<byte>) -> ptr<?> :
    val ret = call-c [p_tidyGetOptionByName](tdoc, optnam)
    return ret
  public lostanza defn w_tidyOptGetName (opt:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetName](opt)
    return ret
  public lostanza defn w_tidyOptGetType (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptGetType](opt)
    return ret
  public lostanza defn w_tidyOptionIsList (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptionIsList](opt)
    return ret
  public lostanza defn w_tidyOptIsReadOnly (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptIsReadOnly](opt)
    return ret
  public lostanza defn w_tidyOptGetCategory (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptGetCategory](opt)
    return ret
  public lostanza defn w_tidyOptGetDefault (opt:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetDefault](opt)
    return ret
  public lostanza defn w_tidyOptGetDefaultInt (opt:ptr<?>) -> long :
    val ret = call-c [p_tidyOptGetDefaultInt](opt)
    return ret
  public lostanza defn w_tidyOptGetDefaultBool (opt:ptr<?>) -> int :
    val ret = call-c [p_tidyOptGetDefaultBool](opt)
    return ret
  public lostanza defn w_tidyOptGetPickList (opt:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetPickList](opt)
    return ret
  public lostanza defn w_tidyOptGetNextPick (opt:ptr<?>, pos:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetNextPick](opt, pos)
    return ret
  public lostanza defn w_tidyOptGetValue (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetValue](tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetValue (tdoc:ptr<?>, optId:int, val_v:ptr<byte>) -> int :
    val ret = call-c [p_tidyOptSetValue](tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptParseValue (tdoc:ptr<?>, optnam:ptr<byte>, val_v:ptr<byte>) -> int :
    val ret = call-c [p_tidyOptParseValue](tdoc, optnam, val_v)
    return ret
  public lostanza defn w_tidyOptGetInt (tdoc:ptr<?>, optId:int) -> long :
    val ret = call-c [p_tidyOptGetInt](tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetInt (tdoc:ptr<?>, optId:int, val_v:long) -> int :
    val ret = call-c [p_tidyOptSetInt](tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptGetBool (tdoc:ptr<?>, optId:int) -> int :
    val ret = call-c [p_tidyOptGetBool](tdoc, optId)
    return ret
  public lostanza defn w_tidyOptSetBool (tdoc:ptr<?>, optId:int, val_v:int) -> int :
    val ret = call-c [p_tidyOptSetBool](tdoc, optId, val_v)
    return ret
  public lostanza defn w_tidyOptResetToDefault (tdoc:ptr<?>, opt:int) -> int :
    val ret = call-c [p_tidyOptResetToDefault](tdoc, opt)
    return ret
  public lostanza defn w_tidyOptResetAllToDefault (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyOptResetAllToDefault](tdoc)
    return ret
  public lostanza defn w_tidyOptSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyOptSnapshot](tdoc)
    return ret
  public lostanza defn w_tidyOptResetToSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyOptResetToSnapshot](tdoc)
    return ret
  public lostanza defn w_tidyOptDiffThanDefault (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyOptDiffThanDefault](tdoc)
    return ret
  public lostanza defn w_tidyOptDiffThanSnapshot (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyOptDiffThanSnapshot](tdoc)
    return ret
  public lostanza defn w_tidyOptCopyConfig (tdocTo:ptr<?>, tdocFrom:ptr<?>) -> int :
    val ret = call-c [p_tidyOptCopyConfig](tdocTo, tdocFrom)
    return ret
  public lostanza defn w_tidyOptGetEncName (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetEncName](tdoc, optId)
    return ret
  public lostanza defn w_tidyOptGetCurrPick (tdoc:ptr<?>, optId:int) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetCurrPick](tdoc, optId)
    return ret
  public lostanza defn w_tidyOptGetDeclTagList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetDeclTagList](tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextDeclTag (tdoc:ptr<?>, optId:int, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetNextDeclTag](tdoc, optId, iter)
    return ret
  public lostanza defn w_tidyOptGetPriorityAttrList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetPriorityAttrList](tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextPriorityAttr (tdoc:ptr<?>, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetNextPriorityAttr](tdoc, iter)
    return ret
  public lostanza defn w_tidyOptGetMutedMessageList (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetMutedMessageList](tdoc)
    return ret
  public lostanza defn w_tidyOptGetNextMutedMessage (tdoc:ptr<?>, iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetNextMutedMessage](tdoc, iter)
    return ret
  public lostanza defn w_tidyOptGetDoc (tdoc:ptr<?>, opt:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyOptGetDoc](tdoc, opt)
    return ret
  public lostanza defn w_tidyOptGetDocLinksList (tdoc:ptr<?>, opt:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetDocLinksList](tdoc, opt)
    return ret
  public lostanza defn w_tidyOptGetNextDocLinks (tdoc:ptr<?>, pos:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c [p_tidyOptGetNextDocLinks](tdoc, pos)
    return ret
  public lostanza defn w_tidyInitSource (source:ptr<?>, srcData:ptr<?>, gbFunc:ptr<( (ptr<?>) -> int )>, ugbFunc:ptr<( (ptr<?>,byte) -> int )>, endFunc:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c [p_tidyInitSource](source, srcData, gbFunc, ugbFunc, endFunc)
    return ret
  public lostanza defn w_tidyGetByte (source:ptr<?>) -> int :
    val ret = call-c [p_tidyGetByte](source)
    return ret
  public lostanza defn w_tidyUngetByte (source:ptr<?>, byteValue:int) -> ref<False> :
    call-c [p_tidyUngetByte](source, byteValue)
    return false
  public lostanza defn w_tidyIsEOF (source:ptr<?>) -> int :
    val ret = call-c [p_tidyIsEOF](source)
    return ret
  public lostanza defn w_tidyInitSink (sink:ptr<?>, snkData:ptr<?>, pbFunc:ptr<( (ptr<?>,byte) -> int )>) -> int :
    val ret = call-c [p_tidyInitSink](sink, snkData, pbFunc)
    return ret
  public lostanza defn w_tidyPutByte (sink:ptr<?>, byteValue:int) -> ref<False> :
    call-c [p_tidyPutByte](sink, byteValue)
    return false
  public lostanza defn w_tidySetEmacsFile (tdoc:ptr<?>, filePath:ptr<byte>) -> ref<False> :
    call-c [p_tidySetEmacsFile](tdoc, filePath)
    return false
  public lostanza defn w_tidyGetEmacsFile (tdoc:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetEmacsFile](tdoc)
    return ret
  public lostanza defn w_tidySetErrorFile (tdoc:ptr<?>, errfilnam:ptr<byte>) -> ptr<int> :
    val ret = call-c [p_tidySetErrorFile](tdoc, errfilnam)
    return ret
  public lostanza defn w_tidySetErrorBuffer (tdoc:ptr<?>, errbuf:ptr<?>) -> int :
    val ret = call-c [p_tidySetErrorBuffer](tdoc, errbuf)
    return ret
  public lostanza defn w_tidySetErrorSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c [p_tidySetErrorSink](tdoc, sink)
    return ret
  public lostanza defn w_tidySetReportFilter (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>,int,int,int,ptr<byte>) -> int )>) -> int :
    val ret = call-c [p_tidySetReportFilter](tdoc, filtCallback)
    return ret
  public lostanza defn w_tidySetReportCallback (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>,int,int,int,ptr<byte>,int) -> int )>) -> int :
    val ret = call-c [p_tidySetReportCallback](tdoc, filtCallback)
    return ret
  public lostanza defn w_tidySetMessageCallback (tdoc:ptr<?>, filtCallback:ptr<( (ptr<?>) -> int )>) -> int :
    val ret = call-c [p_tidySetMessageCallback](tdoc, filtCallback)
    return ret
  public lostanza defn w_tidyGetMessageDoc (tmessage:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetMessageDoc](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageCode (tmessage:ptr<?>) -> int :
    val ret = call-c [p_tidyGetMessageCode](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageKey (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageKey](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageLine (tmessage:ptr<?>) -> int :
    val ret = call-c [p_tidyGetMessageLine](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageColumn (tmessage:ptr<?>) -> int :
    val ret = call-c [p_tidyGetMessageColumn](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageLevel (tmessage:ptr<?>) -> int :
    val ret = call-c [p_tidyGetMessageLevel](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageIsMuted (tmessage:ptr<?>) -> int :
    val ret = call-c [p_tidyGetMessageIsMuted](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageFormatDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageFormatDefault](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageFormat (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageFormat](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageDefault](tmessage)
    return ret
  public lostanza defn w_tidyGetMessage (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessage](tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePosDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessagePosDefault](tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePos (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessagePos](tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePrefixDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessagePrefixDefault](tmessage)
    return ret
  public lostanza defn w_tidyGetMessagePrefix (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessagePrefix](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageOutputDefault (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageOutputDefault](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageOutput (tmessage:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyGetMessageOutput](tmessage)
    return ret
  public lostanza defn w_tidyGetMessageArguments (tmessage:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetMessageArguments](tmessage)
    return ret
  public lostanza defn w_tidyGetNextMessageArgument (tmessage:ptr<?>, iter:ptr<ptr<?>>) -> ptr<?> :
    val ret = call-c [p_tidyGetNextMessageArgument](tmessage, iter)
    return ret
  public lostanza defn w_tidyGetArgType (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c [p_tidyGetArgType](tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgFormat (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyGetArgFormat](tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueString (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_tidyGetArgValueString](tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueUInt (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c [p_tidyGetArgValueUInt](tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueInt (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> int :
    val ret = call-c [p_tidyGetArgValueInt](tmessage, arg)
    return ret
  public lostanza defn w_tidyGetArgValueDouble (tmessage:ptr<?>, arg:ptr<ptr<?>>) -> double :
    val ret = call-c [p_tidyGetArgValueDouble](tmessage, arg)
    return ret
  public lostanza defn w_tidySetPrettyPrinterCallback (tdoc:ptr<?>, callback:ptr<( (ptr<?>,int,int,int) -> int )>) -> int :
    val ret = call-c [p_tidySetPrettyPrinterCallback](tdoc, callback)
    return ret
  public lostanza defn w_tidyParseFile (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c [p_tidyParseFile](tdoc, filename)
    return ret
  public lostanza defn w_tidyParseStdin (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyParseStdin](tdoc)
    return ret
  public lostanza defn w_tidyParseString (tdoc:ptr<?>, content:ptr<byte>) -> int :
    val ret = call-c [p_tidyParseString](tdoc, content)
    return ret
  public lostanza defn w_tidyParseBuffer (tdoc:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c [p_tidyParseBuffer](tdoc, buf)
    return ret
  public lostanza defn w_tidyParseSource (tdoc:ptr<?>, source:ptr<?>) -> int :
    val ret = call-c [p_tidyParseSource](tdoc, source)
    return ret
  public lostanza defn w_tidyCleanAndRepair (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyCleanAndRepair](tdoc)
    return ret
  public lostanza defn w_tidyRunDiagnostics (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyRunDiagnostics](tdoc)
    return ret
  public lostanza defn w_tidyReportDoctype (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidyReportDoctype](tdoc)
    return ret
  public lostanza defn w_tidySaveFile (tdoc:ptr<?>, filename:ptr<byte>) -> int :
    val ret = call-c [p_tidySaveFile](tdoc, filename)
    return ret
  public lostanza defn w_tidySaveStdout (tdoc:ptr<?>) -> int :
    val ret = call-c [p_tidySaveStdout](tdoc)
    return ret
  public lostanza defn w_tidySaveBuffer (tdoc:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c [p_tidySaveBuffer](tdoc, buf)
    return ret
  public lostanza defn w_tidySaveString (tdoc:ptr<?>, buffer:ptr<byte>, buflen:ptr<int>) -> int :
    val ret = call-c [p_tidySaveString](tdoc, buffer, buflen)
    return ret
  public lostanza defn w_tidySaveSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c [p_tidySaveSink](tdoc, sink)
    return ret
  public lostanza defn w_tidyOptSaveFile (tdoc:ptr<?>, cfgfil:ptr<byte>) -> int :
    val ret = call-c [p_tidyOptSaveFile](tdoc, cfgfil)
    return ret
  public lostanza defn w_tidyOptSaveSink (tdoc:ptr<?>, sink:ptr<?>) -> int :
    val ret = call-c [p_tidyOptSaveSink](tdoc, sink)
    return ret
  public lostanza defn w_tidyGetRoot (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetRoot](tdoc)
    return ret
  public lostanza defn w_tidyGetHtml (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetHtml](tdoc)
    return ret
  public lostanza defn w_tidyGetHead (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetHead](tdoc)
    return ret
  public lostanza defn w_tidyGetBody (tdoc:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetBody](tdoc)
    return ret
  public lostanza defn w_tidyGetParent (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetParent](tnod)
    return ret
  public lostanza defn w_tidyGetChild (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetChild](tnod)
    return ret
  public lostanza defn w_tidyGetNext (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetNext](tnod)
    return ret
  public lostanza defn w_tidyGetPrev (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyGetPrev](tnod)
    return ret
  public lostanza defn w_tidyDiscardElement (tdoc:ptr<?>, tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyDiscardElement](tdoc, tnod)
    return ret
  public lostanza defn w_tidyAttrFirst (tnod:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyAttrFirst](tnod)
    return ret
  public lostanza defn w_tidyAttrNext (tattr:ptr<?>) -> ptr<?> :
    val ret = call-c [p_tidyAttrNext](tattr)
    return ret
  public lostanza defn w_tidyAttrName (tattr:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyAttrName](tattr)
    return ret
  public lostanza defn w_tidyAttrValue (tattr:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyAttrValue](tattr)
    return ret
  public lostanza defn w_tidyAttrDiscard (itdoc:ptr<?>, tnod:ptr<?>, tattr:ptr<?>) -> ref<False> :
    call-c [p_tidyAttrDiscard](itdoc, tnod, tattr)
    return false
  public lostanza defn w_tidyAttrGetId (tattr:ptr<?>) -> int :
    val ret = call-c [p_tidyAttrGetId](tattr)
    return ret
  public lostanza defn w_tidyAttrIsEvent (tattr:ptr<?>) -> int :
    val ret = call-c [p_tidyAttrIsEvent](tattr)
    return ret
  public lostanza defn w_tidyAttrGetById (tnod:ptr<?>, attId:int) -> ptr<?> :
    val ret = call-c [p_tidyAttrGetById](tnod, attId)
    return ret
  public lostanza defn w_tidyNodeGetType (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeGetType](tnod)
    return ret
  public lostanza defn w_tidyNodeGetName (tnod:ptr<?>) -> ptr<byte> :
    val ret = call-c [p_tidyNodeGetName](tnod)
    return ret
  public lostanza defn w_tidyNodeIsText (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeIsText](tnod)
    return ret
  public lostanza defn w_tidyNodeIsProp (tdoc:ptr<?>, tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeIsProp](tdoc, tnod)
    return ret
  public lostanza defn w_tidyNodeIsHeader (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeIsHeader](tnod)
    return ret
  public lostanza defn w_tidyNodeHasText (tdoc:ptr<?>, tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeHasText](tdoc, tnod)
    return ret
  public lostanza defn w_tidyNodeGetText (tdoc:ptr<?>, tnod:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeGetText](tdoc, tnod, buf)
    return ret
  public lostanza defn w_tidyNodeGetValue (tdoc:ptr<?>, tnod:ptr<?>, buf:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeGetValue](tdoc, tnod, buf)
    return ret
  public lostanza defn w_tidyNodeGetId (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeGetId](tnod)
    return ret
  public lostanza defn w_tidyNodeLine (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeLine](tnod)
    return ret
  public lostanza defn w_tidyNodeColumn (tnod:ptr<?>) -> int :
    val ret = call-c [p_tidyNodeColumn](tnod)
    return ret
  public lostanza defn w_tidyErrorCodeAsKey (code:int) -> ptr<byte> :
    val ret = call-c [p_tidyErrorCodeAsKey](code)
    return ret
  public lostanza defn w_tidyErrorCodeFromKey (code:ptr<byte>) -> int :
    val ret = call-c [p_tidyErrorCodeFromKey](code)
    return ret
  public lostanza defn w_getErrorCodeList () -> ptr<?> :
    val ret = call-c [p_getErrorCodeList]()
    return ret
  public lostanza defn w_getNextErrorCode (iter:ptr<ptr<?>>) -> int :
    val ret = call-c [p_getNextErrorCode](iter)
    return ret
  public lostanza defn w_tidySetLanguage (languageCode:ptr<byte>) -> int :
    val ret = call-c [p_tidySetLanguage](languageCode)
    return ret
  public lostanza defn w_tidyGetLanguage () -> ptr<byte> :
    val ret = call-c [p_tidyGetLanguage]()
    return ret
  public lostanza defn w_getWindowsLanguageList () -> ptr<?> :
    val ret = call-c [p_getWindowsLanguageList]()
    return ret
  public lostanza defn w_getNextWindowsLanguage (iter:ptr<ptr<?>>) -> ptr<ptr<?>> :
    val ret = call-c [p_getNextWindowsLanguage](iter)
    return ret
  public lostanza defn w_TidyLangWindowsName (item:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_TidyLangWindowsName](item)
    return ret
  public lostanza defn w_TidyLangPosixName (item:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_TidyLangPosixName](item)
    return ret
  public lostanza defn w_tidyLocalizedStringN (messageType:int, quantity:int) -> ptr<byte> :
    val ret = call-c [p_tidyLocalizedStringN](messageType, quantity)
    return ret
  public lostanza defn w_tidyLocalizedString (messageType:int) -> ptr<byte> :
    val ret = call-c [p_tidyLocalizedString](messageType)
    return ret
  public lostanza defn w_tidyDefaultStringN (messageType:int, quantity:int) -> ptr<byte> :
    val ret = call-c [p_tidyDefaultStringN](messageType, quantity)
    return ret
  public lostanza defn w_tidyDefaultString (messageType:int) -> ptr<byte> :
    val ret = call-c [p_tidyDefaultString](messageType)
    return ret
  public lostanza defn w_getStringKeyList () -> ptr<?> :
    val ret = call-c [p_getStringKeyList]()
    return ret
  public lostanza defn w_getNextStringKey (iter:ptr<ptr<?>>) -> int :
    val ret = call-c [p_getNextStringKey](iter)
    return ret
  public lostanza defn w_getInstalledLanguageList () -> ptr<?> :
    val ret = call-c [p_getInstalledLanguageList]()
    return ret
  public lostanza defn w_getNextInstalledLanguage (iter:ptr<ptr<?>>) -> ptr<byte> :
    val ret = call-c [p_getNextInstalledLanguage](iter)
    return ret
  public lostanza defn w_tidyBufInit (buf:ptr<?>) -> ref<False> :
    call-c [p_tidyBufInit](buf)
    return false
  public lostanza defn w_tidyBufInitWithAllocator (buf:ptr<?>, allocator:ptr<?>) -> ref<False> :
    call-c [p_tidyBufInitWithAllocator](buf, allocator)
    return false
  public lostanza defn w_tidyBufAlloc (buf:ptr<?>, allocSize:int) -> ref<False> :
    call-c [p_tidyBufAlloc](buf, allocSize)
    return false
  public lostanza defn w_tidyBufAllocWithAllocator (buf:ptr<?>, allocator:ptr<?>, allocSize:int) -> ref<False> :
    call-c [p_tidyBufAllocWithAllocator](buf, allocator, allocSize)
    return false
  public lostanza defn w_tidyBufCheckAlloc (buf:ptr<?>, allocSize:int, chunkSize:int) -> ref<False> :
    call-c [p_tidyBufCheckAlloc](buf, allocSize, chunkSize)
    return false
  public lostanza defn w_tidyBufFree (buf:ptr<?>) -> ref<False> :
    call-c [p_tidyBufFree](buf)
    return false
  public lostanza defn w_tidyBufClear (buf:ptr<?>) -> ref<False> :
    call-c [p_tidyBufClear](buf)
    return false
  public lostanza defn w_tidyBufAttach (buf:ptr<?>, bp:ptr<byte>, size:int) -> ref<False> :
    call-c [p_tidyBufAttach](buf, bp, size)
    return false
  public lostanza defn w_tidyBufDetach (buf:ptr<?>) -> ref<False> :
    call-c [p_tidyBufDetach](buf)
    return false
  public lostanza defn w_tidyBufAppend (buf:ptr<?>, vp:ptr<?>, size:int) -> ref<False> :
    call-c [p_tidyBufAppend](buf, vp, size)
    return false
  public lostanza defn w_tidyBufPutByte (buf:ptr<?>, bv:byte) -> ref<False> :
    call-c [p_tidyBufPutByte](buf, bv)
    return false
  public lostanza defn w_tidyBufPopByte (buf:ptr<?>) -> int :
    val ret = call-c [p_tidyBufPopByte](buf)
    return ret
  public lostanza defn w_tidyBufGetByte (buf:ptr<?>) -> int :
    val ret = call-c [p_tidyBufGetByte](buf)
    return ret
  public lostanza defn w_tidyBufEndOfInput (buf:ptr<?>) -> int :
    val ret = call-c [p_tidyBufEndOfInput](buf)
    return ret
  public lostanza defn w_tidyBufUngetByte (buf:ptr<?>, bv:byte) -> ref<False> :
    call-c [p_tidyBufUngetByte](buf, bv)
    return false
  public lostanza defn w_tidyInitInputBuffer (inp:ptr<?>, buf:ptr<?>) -> ref<False> :
    call-c [p_tidyInitInputBuffer](inp, buf)
    return false
  public lostanza defn w_tidyInitOutputBuffer (outp:ptr<?>, buf:ptr<?>) -> ref<False> :
    call-c [p_tidyInitOutputBuffer](outp, buf)
    return false
